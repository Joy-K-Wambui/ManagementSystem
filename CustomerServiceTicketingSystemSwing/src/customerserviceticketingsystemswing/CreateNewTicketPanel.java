/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package customerserviceticketingsystemswing;
import customerserviceticketingsystemswing.DAO.Ticket;
import customerserviceticketingsystemswing.DAO.TicketManager;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.UUID;

/**
 *
 * @author Adimn
 */
public class CreateNewTicketPanel extends javax.swing.JPanel {
    private ArrayList<Ticket> ticketList = new ArrayList<>();
    private TicketManager ticketManager;
    private ViewOpenTicketsPanel viewOpenTicketsPanel;

    /**
     * Creates new form CreateNewTicketPanel
     */
    public CreateNewTicketPanel(TicketManager ticketManager, ViewOpenTicketsPanel viewOpenTicketsPanel) {
        this.ticketManager = ticketManager;
        this.viewOpenTicketsPanel = viewOpenTicketsPanel;
        initComponents();
        populateComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        infoLabel = new javax.swing.JLabel();
        issueLabel = new javax.swing.JLabel();
        priorityLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        nameField = new javax.swing.JTextField();
        infoField = new javax.swing.JTextField();
        categoryCombobox = new javax.swing.JComboBox<>();
        priorityCombobox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTxtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));

        nameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        nameLabel.setText("Customer Name");

        infoLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        infoLabel.setText("Contact Information");

        issueLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        issueLabel.setText("Issue Category");

        priorityLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        priorityLabel.setText("Priority Level");

        descriptionLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        descriptionLabel.setText("Description");

        submitButton.setBackground(new java.awt.Color(153, 153, 255));
        submitButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        nameField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        infoField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        categoryCombobox.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        categoryCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryCombobox.setAutoscrolls(true);
        categoryCombobox.setName(""); // NOI18N

        priorityCombobox.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        priorityCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        descriptionTxtArea.setColumns(20);
        descriptionTxtArea.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        descriptionTxtArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTxtArea);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Create New Ticket");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(submitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(infoLabel)
                            .addComponent(priorityLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(issueLabel)
                                .addComponent(descriptionLabel))
                            .addGap(41, 41, 41))))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(255, 255, 255))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(priorityCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameField, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                                .addComponent(infoField)
                                .addComponent(categoryCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(77, 77, 77))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(infoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(categoryCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(priorityCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(131, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameLabel)
                        .addGap(35, 35, 35)
                        .addComponent(infoLabel)
                        .addGap(35, 35, 35)
                        .addComponent(issueLabel)
                        .addGap(38, 38, 38)
                        .addComponent(priorityLabel)
                        .addGap(18, 18, 18)
                        .addComponent(descriptionLabel)
                        .addGap(78, 78, 78)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        // Capture input values
        String name = nameField.getText();
        String contact = infoField.getText();
        String issueCategory = (String) categoryCombobox.getSelectedItem();
        String priority = (String) priorityCombobox.getSelectedItem();
        String description = descriptionTxtArea.getText();
        
        // Validation checks
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Customer name cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;  // Exit the method if validation fails
        }

        if (contact.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Contact information cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (issueCategory == null || issueCategory.equals("Select an issue")) {
            JOptionPane.showMessageDialog(this, "Please select an issue category.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (priority == null || priority.equals("Select a priority")) {
            JOptionPane.showMessageDialog(this, "Please select a priority level.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Description cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Check for valid status and set default to "Pending"
        String status = "Pending"; // Default status
        if (priority != null && (priority.equalsIgnoreCase("Open") || priority.equalsIgnoreCase("Closed"))) {
            status = priority; // Set to the selected priority if valid
        }        
        String ticketId = UUID.randomUUID().toString();
        
        // Create a new ticket object
        Ticket newTicket = new Ticket(ticketId, name, issueCategory, priority, description);

        // Save the ticket using TicketManager
        ticketManager.createTicket(newTicket);
        viewOpenTicketsPanel.loadTickets();

        // Show confirmation dialog
        JOptionPane.showMessageDialog(this, "Ticket Created Successfully!");
        
        // Clear fields
        nameField.setText("");
        infoField.setText("");
        descriptionTxtArea.setText("");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void populateComboBoxes() {
        categoryCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
            "Network Access", "Software Issue", "Hardware Issue", "Billing Problem"
        }));
        
        priorityCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
            "Low", "Medium", "High", "Critical"
        }));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> categoryCombobox;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTxtArea;
    private javax.swing.JTextField infoField;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel issueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JComboBox<String> priorityCombobox;
    private javax.swing.JLabel priorityLabel;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
}
