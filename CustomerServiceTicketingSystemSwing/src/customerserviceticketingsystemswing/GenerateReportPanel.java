/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package customerserviceticketingsystemswing;
import customerserviceticketingsystemswing.DAO.TicketManager;
import customerserviceticketingsystemswing.DAO.CustomerManager;
import customerserviceticketingsystemswing.DAO.Ticket;
import customerserviceticketingsystemswing.DAO.Customer;
import java.util.List;

/**
 *
 * @author Adimn
 */
public class GenerateReportPanel extends javax.swing.JPanel {
        private TicketManager ticketManager;
        private CustomerManager customerManager;
    /**
     * Creates new form GenerateReportPanel
     */
     
    public GenerateReportPanel(TicketManager ticketManager, CustomerManager customerManager) {
        this.ticketManager = ticketManager;
        this.customerManager = customerManager;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportTxtArea = new javax.swing.JTextArea();
        generateReport = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("Report");

        reportTxtArea.setBackground(new java.awt.Color(204, 204, 255));
        reportTxtArea.setColumns(20);
        reportTxtArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        reportTxtArea.setRows(5);
        jScrollPane1.setViewportView(reportTxtArea);

        generateReport.setBackground(new java.awt.Color(153, 153, 255));
        generateReport.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        generateReport.setText("Generate Report");
        generateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(365, 365, 365))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 766, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(generateReport)
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(generateReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void generateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateReportActionPerformed
        // TODO add your handling code here:
        StringBuilder report = new StringBuilder();
        report.append("Customer Report:\n\n");

        // Iterate through customers
        for (Customer customer : customerManager.getAllCustomers()) {
            report.append("Customer ID: ").append(customer.getId()).append("\n")
                  .append("Name: ").append(customer.getName()).append("\n")
                  .append("Phone: ").append(customer.getPhone()).append("\n")
                  .append("Email: ").append(customer.getEmail()).append("\n");

            // Fetch tickets related to this customer
            report.append("Tickets:\n");
            for (Ticket ticket : ticketManager.getAllTickets()) {
                if (ticket.getCustomerName().equals(customer.getName())) {
                    report.append("  - Ticket ID: ").append(ticket.getTicketId())
                          .append(", Issue: ").append(ticket.getIssue())
                          .append(", Priority: ").append(ticket.getPriority())
                          .append(", Status: ").append(ticket.getStatus()).append("\n");
                }
            }

            report.append("\n"); // Extra line for separation
        }
        List<Ticket> tickets = ticketManager.getAllTickets();
        report.append("Total Tickets: ").append(tickets.size()).append("\n\n");

        report.append("Ticket Details:\n");
        for (Ticket ticket : tickets) {
            report.append("Ticket ID: ").append(ticket.getTicketId()).append(", ")
                  .append("Customer Name: ").append(ticket.getCustomerName()).append(", ")
                  .append("Issue: ").append(ticket.getIssue()).append(", ")
                  .append("Priority: ").append(ticket.getPriority()).append(", ")
                  .append("Status: ").append(ticket.getStatus()).append("\n");
        }

        reportTxtArea.setText(report.toString());        
    }//GEN-LAST:event_generateReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generateReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea reportTxtArea;
    // End of variables declaration//GEN-END:variables
}
